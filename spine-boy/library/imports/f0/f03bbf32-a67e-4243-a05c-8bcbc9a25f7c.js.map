{"version":3,"sources":["..\\..\\..\\..\\assets\\Script/assets\\Script\\SpineBoy.js"],"names":["cc","Class","extends","Component","properties","spineBoy","sp","Skeleton","onLoad","node","active","_initCharacter","direction","velocityMax","Rigid_Body","getComponent","RigidBody","walkForce","jumpForce","onTheGround","actionSpeed","callFunc","isStanding","start","onBeginContact","contact","selfCollider","otherCollider","tag","updateScore","addAnimation","setCompleteListener","_eventHandler","score","Emitter","instance","registerEvent","moveLeft","bind","moveRight","moveJump","sKeyDown","leftUp","rightUp","upKeyUp","sKeyUp","_setAnimationRun","setAnimation","scaleX","applyForceToCenter","v2","_setAnimationIdle","update","dt","linearVelocity","x","y","log","setPosition"],"mappings":"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","file":"SpineBoy.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["import Emitter from 'mEmitter';\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        spineBoy: sp.Skeleton\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    onLoad() {\r\n        this.node.active = false;\r\n        this._initCharacter();\r\n        // this._eventHandler();\r\n\r\n        this.direction = 0;\r\n        this.velocityMax = 250;\r\n        this.Rigid_Body = this.node.getComponent(cc.RigidBody);\r\n        this.walkForce = 3000;\r\n        this.jumpForce = 140000;\r\n        this.onTheGround = false;\r\n        this.actionSpeed = cc.callFunc(() => {\r\n            this.walkForce = 15000;\r\n        });\r\n        this.isStanding = true;\r\n\r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n    onBeginContact(contact, selfCollider, otherCollider) {\r\n        if (selfCollider.tag === 1) {\r\n            this.onTheGround = true;\r\n        }\r\n        if (otherCollider.tag == 2) {\r\n            this.updateScore();\r\n        }\r\n    },\r\n    _initCharacter() {\r\n        this.node.active = true;\r\n        this.spineBoy.addAnimation(0, 'portal', false);\r\n        this.spineBoy.setCompleteListener(() => {\r\n            // this.spineBoy.addAnimation(0, 'idle', true);\r\n            this._eventHandler();\r\n        })\r\n        this.score = 0;\r\n    },\r\n    _eventHandler() {\r\n        // Emitter.instance = new Emitter();\r\n        Emitter.instance.registerEvent('leftDown', this.moveLeft.bind(this));\r\n        Emitter.instance.registerEvent('rightDown', this.moveRight.bind(this));\r\n        Emitter.instance.registerEvent('upKeyDown', this.moveJump.bind(this));\r\n        Emitter.instance.registerEvent('sKeyDown', this.sKeyDown.bind(this));\r\n\r\n        Emitter.instance.registerEvent('leftUp', this.leftUp.bind(this));\r\n        Emitter.instance.registerEvent('rightUp', this.rightUp.bind(this));\r\n        Emitter.instance.registerEvent('upKeyUp', this.upKeyUp.bind(this));\r\n        Emitter.instance.registerEvent('sKeyUp', this.sKeyUp.bind(this));\r\n    },\r\n    _setAnimationRun() {\r\n        // this.spineBoy.setMix('walk', 'run', 0.8);\r\n        // this.spineBoy.setAnimation(0, 'walk', false);\r\n        this.spineBoy.setAnimation(0, 'run', true);\r\n    },\r\n    moveLeft() {\r\n        if (this.isStanding) {\r\n            this.direction = -1;\r\n            this.node.scaleX = -0.1;\r\n            // this.node.runAction(cc.sequence(cc.delayTime(1), this.actionSpeed));\r\n            this._setAnimationRun();\r\n            this.isStanding = false;\r\n        }\r\n    },\r\n    moveRight() {\r\n        if (this.isStanding) {\r\n            this.direction = 1;\r\n            this.node.scaleX = 0.1;\r\n            // this.node.runAction(cc.sequence(cc.delayTime(1), this.actionSpeed));\r\n            this._setAnimationRun();\r\n            this.isStanding = false;\r\n        }\r\n    },\r\n    moveJump() {\r\n        if (this.onTheGround) {\r\n            this.Rigid_Body.applyForceToCenter(cc.v2(0, this.jumpForce), true);\r\n            this.onTheGround = false;\r\n        }\r\n    },\r\n    sKeyDown() {\r\n        // console.log('DownKey down');\r\n    },\r\n\r\n    _setAnimationIdle() {\r\n        this.spineBoy.setAnimation(0, 'idle', true);\r\n    },\r\n    leftUp() {\r\n        this.direction = 0;\r\n        this.velocityMax = 150;\r\n        this.isStanding = true;\r\n        this._setAnimationIdle();\r\n    },\r\n    rightUp() {\r\n        this.direction = 0;\r\n        this.velocityMax = 150;\r\n        this.isStanding = true;\r\n        this._setAnimationIdle();\r\n    },\r\n    upKeyUp() {\r\n    },\r\n\r\n    sKeyUp() {\r\n\r\n    },\r\n\r\n    update(dt) {\r\n\r\n        if ((this.direction > 0 && this.Rigid_Body.linearVelocity.x < this.velocityMax) ||\r\n            (this.direction < 0 && this.Rigid_Body.linearVelocity.x > -this.velocityMax)) {\r\n            this.Rigid_Body.applyForceToCenter(cc.v2(this.direction * this.walkForce, 0), true);\r\n        }\r\n\r\n        if (this.spineBoy.node.y < -180) {\r\n            cc.log(\"Lose\");\r\n            this.spineBoy.node.y = 0;\r\n            this.spineBoy.node.setPosition(cc.v2(-330, 0));\r\n            return\r\n        }\r\n    },\r\n});\r\n"]}