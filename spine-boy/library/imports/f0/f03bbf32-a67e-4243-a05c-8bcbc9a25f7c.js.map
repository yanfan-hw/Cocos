{"version":3,"sources":["../../../../assets/Script/assets/Script/SpineBoy.js"],"names":["cc","Class","extends","Component","properties","spineBoy","sp","Skeleton","onLoad","node","active","_initCharacter","direction","velocityMax","Rigid_Body","getComponent","RigidBody","walkForce","jumpForce","onTheGround","actionSpeed","callFunc","start","onBeginContact","contact","selfCollider","otherCollider","tag","addAnimation","setCompleteListener","_eventHandler","Emitter","instance","registerEvent","moveLeft","bind","moveRight","moveJump","downKeyDown","leftUp","rightUp","upKeyUp","downKeyUp","_setAnimationRun","setMix","setAnimation","scaleX","runAction","sequence","delayTime","applyForceToCenter","v2","_setAnimationIdle","update","dt","linearVelocity","x"],"mappings":"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","file":"SpineBoy.js","sourceRoot":"../../../../assets/Script","sourcesContent":["import Emitter from 'mEmitter';\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        spineBoy: sp.Skeleton\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    onLoad() {\r\n        this.node.active = false;\r\n        this._initCharacter();\r\n        // this._eventHandler();\r\n\r\n        this.direction = 0;\r\n        this.velocityMax = 150;\r\n        this.Rigid_Body = this.node.getComponent(cc.RigidBody);\r\n        this.walkForce = 10000;\r\n        this.jumpForce = 110000;\r\n        this.onTheGround = false;\r\n        this.actionSpeed = cc.callFunc(() => {\r\n            this.walkForce = 15000;\r\n        });\r\n\r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n    onBeginContact(contact, selfCollider, otherCollider) {\r\n        if (selfCollider.tag === 1) {\r\n            this.onTheGround = true;\r\n        }\r\n    },\r\n    _initCharacter() {\r\n        this.node.active = true;\r\n        this.spineBoy.addAnimation(0, 'portal', false);\r\n        this.spineBoy.setCompleteListener(() => {\r\n            this.spineBoy.addAnimation(0, 'idle', true);\r\n            this._eventHandler();\r\n        })\r\n    },\r\n    _eventHandler() {\r\n        // Emitter.instance = new Emitter();\r\n        Emitter.instance.registerEvent('leftDown', this.moveLeft.bind(this));\r\n        Emitter.instance.registerEvent('rightDown', this.moveRight.bind(this));\r\n        Emitter.instance.registerEvent('upKeyDown', this.moveJump.bind(this));\r\n        Emitter.instance.registerEvent('downKeyDown', this.downKeyDown.bind(this));\r\n\r\n        Emitter.instance.registerEvent('leftUp', this.leftUp.bind(this));\r\n        Emitter.instance.registerEvent('rightUp', this.rightUp.bind(this));\r\n        Emitter.instance.registerEvent('upKeyUp', this.upKeyUp.bind(this));\r\n        Emitter.instance.registerEvent('downKeyUp', this.downKeyUp.bind(this));\r\n    },\r\n    _setAnimationRun() {\r\n        this.spineBoy.setMix('walk', 'run', 0.8);\r\n        this.spineBoy.setAnimation(0, 'walk', false);\r\n        this.spineBoy.addAnimation(0, 'run', true);\r\n    },\r\n    moveLeft() {\r\n        this.direction = -1;\r\n        this.node.scaleX = -0.1;\r\n        this.node.runAction(cc.sequence(cc.delayTime(1), this.actionSpeed));\r\n    },\r\n    moveRight() {\r\n        this.direction = 1;\r\n        this.node.scaleX = 0.1;\r\n        this.node.runAction(cc.sequence(cc.delayTime(1), this.actionSpeed));\r\n    },\r\n    moveJump() {\r\n        if (this.onTheGround) {\r\n            this.Rigid_Body.applyForceToCenter(cc.v2(0, this.jumpForce), true);\r\n            this.onTheGround = false;\r\n        }\r\n    },\r\n    downKeyDown() {\r\n        // console.log('DownKey down');\r\n    },\r\n\r\n    _setAnimationIdle() {\r\n        this.spineBoy.setAnimation(0, 'idle', true);\r\n    },\r\n    leftUp() {\r\n        this.direction = 0;\r\n        this.velocityMax = 150;\r\n    },\r\n    rightUp() {\r\n        this.direction = 0;\r\n        this.velocityMax = 150;\r\n    },\r\n    upKeyUp() {\r\n        // this.canJump = true;\r\n    },\r\n    downKeyUp() {\r\n\r\n    },\r\n\r\n    update(dt) {\r\n        if ((this.direction > 0 && this.Rigid_Body.linearVelocity.x < this.velocityMax) ||\r\n            (this.direction < 0 && this.Rigid_Body.linearVelocity.x > -this.velocityMax)) {\r\n            this.Rigid_Body.applyForceToCenter(cc.v2(this.direction * this.walkForce, 0), true);\r\n        }\r\n    },\r\n});\r\n"]}