{"version":3,"sources":["SpineBoy.js"],"names":["cc","Class","extends","Component","properties","spineBoy","sp","Skeleton","onLoad","node","active","initCharacter","eventHandler","canMove","canJump","actionRight","moveBy","v2","actionLeft","actionJump","jumpBy","start","addAnimation","Emitter","instance","registerEvent","moveLeft","bind","moveRight","moveJump","downKeyDown","leftUp","rightUp","upKeyUp","downKeyUp","scaleX","runAction","setAnimation","resetCanJump","callFunc","action","sequence","console","log","stopAction"],"mappings":"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","file":"SpineBoy.js","sourceRoot":"..\\..\\..\\..\\assets\\Script","sourcesContent":["import Emitter from 'mEmitter';\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        spineBoy: sp.Skeleton\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    onLoad() {\r\n        this.node.active = false;\r\n        this.initCharacter();\r\n        this.eventHandler();\r\n\r\n        this.canMove = true;\r\n        this.canJump = true;\r\n        this.actionRight = cc.moveBy(10, cc.v2(3000, 0));\r\n        this.actionLeft = cc.moveBy(10, cc.v2(-3000, 0));\r\n        this.actionJump = cc.jumpBy(1, cc.v2(0, 0), 100, 1);\r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n    initCharacter() {\r\n        this.node.active = true;\r\n        this.spineBoy.addAnimation(0, 'portal', false);\r\n        // this.spineBoy.setCompleteListener(() => {\r\n        //     this.spineBoy.addAnimation(0, 'idle', true);\r\n        // })\r\n    },\r\n    eventHandler() {\r\n        // Emitter.instance = new Emitter();\r\n        Emitter.instance.registerEvent('leftDown', this.moveLeft.bind(this));\r\n        Emitter.instance.registerEvent('rightDown', this.moveRight.bind(this));\r\n        Emitter.instance.registerEvent('upKeyDown', this.moveJump.bind(this));\r\n        Emitter.instance.registerEvent('downKeyDown', this.downKeyDown.bind(this));\r\n\r\n        Emitter.instance.registerEvent('leftUp', this.leftUp.bind(this));\r\n        Emitter.instance.registerEvent('rightUp', this.rightUp.bind(this));\r\n        Emitter.instance.registerEvent('upKeyUp', this.upKeyUp.bind(this));\r\n        Emitter.instance.registerEvent('downKeyUp', this.downKeyUp.bind(this));\r\n    },\r\n\r\n    moveLeft() {\r\n        if (this.canMove) {\r\n            this.canMove = false;\r\n            this.node.scaleX = -0.1;\r\n            this.node.runAction(this.actionLeft);\r\n            this.spineBoy.setAnimation(0, 'run', true);\r\n        }\r\n    },\r\n    moveRight() {\r\n        if (this.canMove) {\r\n            this.canMove = false;\r\n            this.node.scaleX = 0.1;\r\n            this.node.runAction(this.actionRight);\r\n            this.spineBoy.setAnimation(0, 'run', true);\r\n        }\r\n    },\r\n    moveJump() {\r\n        if (this.canJump) {\r\n            let resetCanJump = cc.callFunc(() => {\r\n                this.canJump = true;\r\n            }, this);\r\n            let action = cc.sequence(this.actionJump, resetCanJump);\r\n            this.node.runAction(action);\r\n\r\n            this.canJump = false;\r\n        }\r\n    },\r\n    downKeyDown() {\r\n        console.log('DownKey down');\r\n    },\r\n\r\n    leftUp() {\r\n        this.canMove = true;\r\n        this.node.stopAction(this.actionLeft);\r\n        this.spineBoy.setAnimation(0, 'idle', true);\r\n    },\r\n    rightUp() {\r\n        this.canMove = true;\r\n        this.node.stopAction(this.actionRight);\r\n        this.spineBoy.setAnimation(0, 'idle', true);\r\n    },\r\n    upKeyUp() {\r\n        // this.node.stopAction(this.actionJump);\r\n        // this.spineBoy.setAnimation(0, 'idle', true);\r\n    },\r\n    downKeyUp() {\r\n        console.log('DownKey up');\r\n    },\r\n\r\n    // update(dt) {},\r\n});\r\n"]}